{"version":3,"sources":["webpack:///./node_modules/vue-loader/lib/runtime/componentNormalizer.js","webpack:///(webpack)/buildin/module.js","webpack:///./node_modules/vue-functional-data-merge/dist/lib.esm.js","webpack:///(webpack)/buildin/global.js","webpack:///./node_modules/vue-numeral-filter/dist/vue-numeral-filter.es.js","webpack:///./node_modules/popper.js/dist/esm/popper.js"],"names":["normalizeComponent","scriptExports","render","staticRenderFns","functionalTemplate","injectStyles","scopeId","moduleIdentifier","shadowMode","hook","options","_compiled","functional","_scopeId","context","this","$vnode","ssrContext","parent","__VUE_SSR_CONTEXT__","call","_registeredComponents","add","_ssrRegister","$root","$options","shadowRoot","_injectStyles","originalRender","h","existing","beforeCreate","concat","exports","__webpack_require__","d","__webpack_exports__","module","webpackPolyfill","deprecate","paths","children","Object","defineProperty","enumerable","get","l","i","r","mergeData","__assign","assign","e","a","s","t","arguments","length","prototype","hasOwnProperty","apply","c","keys","Array","isArray","trim","n","o","g","Function","window","numeral__WEBPACK_IMPORTED_MODULE_0__","numeral__WEBPACK_IMPORTED_MODULE_0___default","abbreviate","value","format","bytes","exposedNumeral","exponential","ordinal","percentage","separator","currency","vueNumeralFilterInstaller","install","vue","_ref","undefined","_ref$locale","locale","filter","Vue","use","global","isBrowser","document","longerTimeoutBrowsers","timeoutDuration","navigator","userAgent","indexOf","microtaskDebounce","fn","called","Promise","resolve","then","taskDebounce","scheduled","setTimeout","supportsMicroTasks","debounce","isFunction","functionToCheck","getType","toString","getStyleComputedProperty","element","property","nodeType","ownerDocument","defaultView","css","getComputedStyle","getParentNode","nodeName","parentNode","host","getScrollParent","body","_getStyleComputedProp","overflow","overflowX","overflowY","test","isIE11","MSInputMethodContext","documentMode","isIE10","isIE","version","getOffsetParent","documentElement","noOffsetParent","offsetParent","nextElementSibling","isOffsetContainer","firstElementChild","getRoot","node","findCommonOffsetParent","element1","element2","order","compareDocumentPosition","Node","DOCUMENT_POSITION_FOLLOWING","start","end","range","createRange","setStart","setEnd","commonAncestorContainer","contains","element1root","getScroll","side","upperSide","html","scrollingElement","includeScroll","rect","subtract","scrollTop","scrollLeft","modifier","top","bottom","left","right","getBordersSize","styles","axis","sideA","sideB","parseFloat","getSize","computedStyle","Math","max","parseInt","getWindowSizes","height","width","classCallCheck","instance","Constructor","TypeError","createClass","defineProperties","target","props","descriptor","configurable","writable","key","protoProps","staticProps","obj","_extends","source","getClientRect","offsets","getBoundingClientRect","result","sizes","clientWidth","clientHeight","horizScrollbar","offsetWidth","vertScrollbar","offsetHeight","getOffsetRectRelativeToArbitraryNode","fixedPosition","isHTML","childrenRect","parentRect","scrollParent","borderTopWidth","borderLeftWidth","marginTop","marginLeft","getViewportOffsetRectRelativeToArtbitraryNode","excludeScroll","relativeOffset","innerWidth","innerHeight","offset","isFixed","getFixedPositionOffsetParent","parentElement","el","getBoundaries","popper","reference","padding","boundariesElement","boundaries","boundariesNode","_getWindowSizes","isPaddingNumber","getArea","computeAutoPlacement","placement","refRect","rects","sortedAreas","map","area","sort","b","filteredAreas","_ref2","computedPlacement","variation","split","getReferenceOffsets","state","commonOffsetParent","getOuterSizes","x","marginBottom","y","marginRight","getOppositePlacement","hash","replace","matched","getPopperOffsets","referenceOffsets","popperRect","popperOffsets","isHoriz","mainSide","secondarySide","measurement","secondaryMeasurement","find","arr","check","findIndex","prop","cur","match","runModifiers","modifiers","data","ends","modifiersToRun","slice","forEach","console","warn","enabled","update","isDestroyed","arrowStyles","attributes","flipped","positionFixed","flip","originalPlacement","position","isCreated","onUpdate","onCreate","isModifierEnabled","modifierName","some","name","getSupportedPropertyName","prefixes","upperProp","charAt","toUpperCase","prefix","toCheck","style","destroy","removeAttribute","willChange","disableEventListeners","removeOnDestroy","removeChild","getWindow","attachToScrollParents","event","callback","scrollParents","isBody","addEventListener","passive","push","setupEventListeners","updateBound","scrollElement","eventsEnabled","enableEventListeners","scheduleUpdate","removeEventListeners","removeEventListener","cancelAnimationFrame","isNumeric","isNaN","isFinite","setStyles","unit","setAttributes","setAttribute","applyStyle","arrowElement","applyStyleOnLoad","modifierOptions","getRoundedOffsets","shouldRound","_data$offsets","round","floor","noRound","v","referenceWidth","popperWidth","isVertical","isVariation","sameWidthParity","bothOddWidth","horizontalToInteger","verticalToInteger","isFirefox","computeStyle","legacyGpuAccelerationOption","gpuAcceleration","offsetParentRect","devicePixelRatio","prefixedProperty","invertTop","invertLeft","x-placement","arrow","isModifierRequired","requestingName","requestedName","requesting","isRequired","_requesting","requested","_data$offsets$arrow","querySelector","len","sideCapitalized","toLowerCase","altSide","opSide","arrowElementSize","center","popperMarginSide","popperBorderSide","sideValue","min","getOppositeVariation","placements","validPlacements","clockwise","counter","index","reverse","BEHAVIORS","FLIP","CLOCKWISE","COUNTERCLOCKWISE","placementOpposite","flipOrder","behavior","step","refOffsets","overlapsRef","overflowsLeft","overflowsRight","overflowsTop","overflowsBottom","overflowsBoundaries","flippedVariationByRef","flipVariations","flippedVariationByContent","flipVariationsByContent","flippedVariation","keepTogether","toValue","str","size","parseOffset","basePlacement","useHeight","fragments","frag","divider","search","splitRegex","ops","op","mergeWithPrevious","reduce","index2","preventOverflow","transformProp","popperStyles","transform","priority","primary","escapeWithReference","secondary","shift","shiftvariation","shiftOffsets","hide","bound","inner","subtractLength","onLoad","Defaults","Popper","_this","requestAnimationFrame","bind","jquery","Utils","PopperUtils"],"mappings":"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","file":"js/chunk-vendors~f9ca8911.e26682db.js","sourcesContent":["/* globals __VUE_SSR_CONTEXT__ */\n\n// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).\n// This module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle.\n\nexport default function normalizeComponent (\n  scriptExports,\n  render,\n  staticRenderFns,\n  functionalTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier, /* server only */\n  shadowMode /* vue-cli only */\n) {\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (render) {\n    options.render = render\n    options.staticRenderFns = staticRenderFns\n    options._compiled = true\n  }\n\n  // functional template\n  if (functionalTemplate) {\n    options.functional = true\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = 'data-v-' + scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = shadowMode\n      ? function () { injectStyles.call(this, this.$root.$options.shadowRoot) }\n      : injectStyles\n  }\n\n  if (hook) {\n    if (options.functional) {\n      // for template-only hot-reload because in that case the render fn doesn't\n      // go through the normalizer\n      options._injectStyles = hook\n      // register for functioal component in vue file\n      var originalRender = options.render\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return originalRender(h, context)\n      }\n    } else {\n      // inject component registration as beforeCreate hook\n      var existing = options.beforeCreate\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    }\n  }\n\n  return {\n    exports: scriptExports,\n    options: options\n  }\n}\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","var __assign=function(){return(__assign=Object.assign||function(e){for(var a,s=1,t=arguments.length;s<t;s++)for(var r in a=arguments[s])Object.prototype.hasOwnProperty.call(a,r)&&(e[r]=a[r]);return e}).apply(this,arguments)};function mergeData(){for(var e,a,s={},t=arguments.length;t--;)for(var r=0,c=Object.keys(arguments[t]);r<c.length;r++)switch(e=c[r]){case\"class\":case\"style\":case\"directives\":Array.isArray(s[e])||(s[e]=[]),s[e]=s[e].concat(arguments[t][e]);break;case\"staticClass\":if(!arguments[t][e])break;void 0===s[e]&&(s[e]=\"\"),s[e]&&(s[e]+=\" \"),s[e]+=arguments[t][e].trim();break;case\"on\":case\"nativeOn\":s[e]||(s[e]={});for(var n=0,o=Object.keys(arguments[t][e]||{});n<o.length;n++)a=o[n],s[e][a]?s[e][a]=[].concat(s[e][a],arguments[t][e][a]):s[e][a]=arguments[t][e][a];break;case\"attrs\":case\"props\":case\"domProps\":case\"scopedSlots\":case\"staticStyle\":case\"hook\":case\"transition\":s[e]||(s[e]={}),s[e]=__assign({},arguments[t][e],s[e]);break;case\"slot\":case\"key\":case\"ref\":case\"tag\":case\"show\":case\"keepAlive\":default:s[e]||(s[e]=arguments[t][e])}return s}export{mergeData};\n//# sourceMappingURL=lib.esm.js.map\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","import numeral from 'numeral';\nimport 'numeral/locales';\n\nvar abbreviate = function abbreviate(value) {\n  return numeral(value).format('0.0a');\n};\n\nvar bytes = function bytes(value) {\n  return numeral(value).format('0 b');\n};\n\nvar exposedNumeral = function exposedNumeral(value, format) {\n  return numeral(value).format(format);\n};\n\nvar exponential = function exponential(value) {\n  return numeral(value).format('0.[00]e+0');\n};\n\nvar ordinal = function ordinal(value) {\n  return numeral(value).format('Oo');\n};\n\nvar percentage = function percentage(value) {\n  return numeral(value).format('0.[00]%');\n};\n\nvar separator = function separator(value) {\n  return numeral(value).format('0,0');\n};\n\nvar currency = function currency(value) {\n  return numeral(value).format('$0,0.00');\n};\n\nvar vueNumeralFilterInstaller = {\n  install: function install(vue) {\n    var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n        _ref$locale = _ref.locale,\n        locale = _ref$locale === void 0 ? 'en-gb' : _ref$locale;\n\n    numeral.locale(locale);\n    vue.filter('abbreviate', abbreviate);\n    vue.filter('bytes', bytes);\n    vue.filter('exponential', exponential);\n    vue.filter('numeral', exposedNumeral);\n    vue.filter('ordinal', ordinal);\n    vue.filter('percentage', percentage);\n    vue.filter('separator', separator);\n    vue.filter('currency', currency);\n  }\n};\n\nif (typeof window !== 'undefined' && window.Vue) {\n  Vue.use(vueNumeralFilterInstaller);\n}\n\nexport default vueNumeralFilterInstaller;\n","/**!\n * @fileOverview Kickass library to create and place poppers near their reference elements.\n * @version 1.15.0\n * @license\n * Copyright (c) 2016 Federico Zivolo and contributors\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\nvar isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined';\n\nvar longerTimeoutBrowsers = ['Edge', 'Trident', 'Firefox'];\nvar timeoutDuration = 0;\nfor (var i = 0; i < longerTimeoutBrowsers.length; i += 1) {\n  if (isBrowser && navigator.userAgent.indexOf(longerTimeoutBrowsers[i]) >= 0) {\n    timeoutDuration = 1;\n    break;\n  }\n}\n\nfunction microtaskDebounce(fn) {\n  var called = false;\n  return function () {\n    if (called) {\n      return;\n    }\n    called = true;\n    window.Promise.resolve().then(function () {\n      called = false;\n      fn();\n    });\n  };\n}\n\nfunction taskDebounce(fn) {\n  var scheduled = false;\n  return function () {\n    if (!scheduled) {\n      scheduled = true;\n      setTimeout(function () {\n        scheduled = false;\n        fn();\n      }, timeoutDuration);\n    }\n  };\n}\n\nvar supportsMicroTasks = isBrowser && window.Promise;\n\n/**\n* Create a debounced version of a method, that's asynchronously deferred\n* but called in the minimum time possible.\n*\n* @method\n* @memberof Popper.Utils\n* @argument {Function} fn\n* @returns {Function}\n*/\nvar debounce = supportsMicroTasks ? microtaskDebounce : taskDebounce;\n\n/**\n * Check if the given variable is a function\n * @method\n * @memberof Popper.Utils\n * @argument {Any} functionToCheck - variable to check\n * @returns {Boolean} answer to: is a function?\n */\nfunction isFunction(functionToCheck) {\n  var getType = {};\n  return functionToCheck && getType.toString.call(functionToCheck) === '[object Function]';\n}\n\n/**\n * Get CSS computed property of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Eement} element\n * @argument {String} property\n */\nfunction getStyleComputedProperty(element, property) {\n  if (element.nodeType !== 1) {\n    return [];\n  }\n  // NOTE: 1 DOM access here\n  var window = element.ownerDocument.defaultView;\n  var css = window.getComputedStyle(element, null);\n  return property ? css[property] : css;\n}\n\n/**\n * Returns the parentNode or the host of the element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} parent\n */\nfunction getParentNode(element) {\n  if (element.nodeName === 'HTML') {\n    return element;\n  }\n  return element.parentNode || element.host;\n}\n\n/**\n * Returns the scrolling parent of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} scroll parent\n */\nfunction getScrollParent(element) {\n  // Return body, `getScroll` will take care to get the correct `scrollTop` from it\n  if (!element) {\n    return document.body;\n  }\n\n  switch (element.nodeName) {\n    case 'HTML':\n    case 'BODY':\n      return element.ownerDocument.body;\n    case '#document':\n      return element.body;\n  }\n\n  // Firefox want us to check `-x` and `-y` variations as well\n\n  var _getStyleComputedProp = getStyleComputedProperty(element),\n      overflow = _getStyleComputedProp.overflow,\n      overflowX = _getStyleComputedProp.overflowX,\n      overflowY = _getStyleComputedProp.overflowY;\n\n  if (/(auto|scroll|overlay)/.test(overflow + overflowY + overflowX)) {\n    return element;\n  }\n\n  return getScrollParent(getParentNode(element));\n}\n\nvar isIE11 = isBrowser && !!(window.MSInputMethodContext && document.documentMode);\nvar isIE10 = isBrowser && /MSIE 10/.test(navigator.userAgent);\n\n/**\n * Determines if the browser is Internet Explorer\n * @method\n * @memberof Popper.Utils\n * @param {Number} version to check\n * @returns {Boolean} isIE\n */\nfunction isIE(version) {\n  if (version === 11) {\n    return isIE11;\n  }\n  if (version === 10) {\n    return isIE10;\n  }\n  return isIE11 || isIE10;\n}\n\n/**\n * Returns the offset parent of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} offset parent\n */\nfunction getOffsetParent(element) {\n  if (!element) {\n    return document.documentElement;\n  }\n\n  var noOffsetParent = isIE(10) ? document.body : null;\n\n  // NOTE: 1 DOM access here\n  var offsetParent = element.offsetParent || null;\n  // Skip hidden elements which don't have an offsetParent\n  while (offsetParent === noOffsetParent && element.nextElementSibling) {\n    offsetParent = (element = element.nextElementSibling).offsetParent;\n  }\n\n  var nodeName = offsetParent && offsetParent.nodeName;\n\n  if (!nodeName || nodeName === 'BODY' || nodeName === 'HTML') {\n    return element ? element.ownerDocument.documentElement : document.documentElement;\n  }\n\n  // .offsetParent will return the closest TH, TD or TABLE in case\n  // no offsetParent is present, I hate this job...\n  if (['TH', 'TD', 'TABLE'].indexOf(offsetParent.nodeName) !== -1 && getStyleComputedProperty(offsetParent, 'position') === 'static') {\n    return getOffsetParent(offsetParent);\n  }\n\n  return offsetParent;\n}\n\nfunction isOffsetContainer(element) {\n  var nodeName = element.nodeName;\n\n  if (nodeName === 'BODY') {\n    return false;\n  }\n  return nodeName === 'HTML' || getOffsetParent(element.firstElementChild) === element;\n}\n\n/**\n * Finds the root node (document, shadowDOM root) of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} node\n * @returns {Element} root node\n */\nfunction getRoot(node) {\n  if (node.parentNode !== null) {\n    return getRoot(node.parentNode);\n  }\n\n  return node;\n}\n\n/**\n * Finds the offset parent common to the two provided nodes\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element1\n * @argument {Element} element2\n * @returns {Element} common offset parent\n */\nfunction findCommonOffsetParent(element1, element2) {\n  // This check is needed to avoid errors in case one of the elements isn't defined for any reason\n  if (!element1 || !element1.nodeType || !element2 || !element2.nodeType) {\n    return document.documentElement;\n  }\n\n  // Here we make sure to give as \"start\" the element that comes first in the DOM\n  var order = element1.compareDocumentPosition(element2) & Node.DOCUMENT_POSITION_FOLLOWING;\n  var start = order ? element1 : element2;\n  var end = order ? element2 : element1;\n\n  // Get common ancestor container\n  var range = document.createRange();\n  range.setStart(start, 0);\n  range.setEnd(end, 0);\n  var commonAncestorContainer = range.commonAncestorContainer;\n\n  // Both nodes are inside #document\n\n  if (element1 !== commonAncestorContainer && element2 !== commonAncestorContainer || start.contains(end)) {\n    if (isOffsetContainer(commonAncestorContainer)) {\n      return commonAncestorContainer;\n    }\n\n    return getOffsetParent(commonAncestorContainer);\n  }\n\n  // one of the nodes is inside shadowDOM, find which one\n  var element1root = getRoot(element1);\n  if (element1root.host) {\n    return findCommonOffsetParent(element1root.host, element2);\n  } else {\n    return findCommonOffsetParent(element1, getRoot(element2).host);\n  }\n}\n\n/**\n * Gets the scroll value of the given element in the given side (top and left)\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @argument {String} side `top` or `left`\n * @returns {number} amount of scrolled pixels\n */\nfunction getScroll(element) {\n  var side = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'top';\n\n  var upperSide = side === 'top' ? 'scrollTop' : 'scrollLeft';\n  var nodeName = element.nodeName;\n\n  if (nodeName === 'BODY' || nodeName === 'HTML') {\n    var html = element.ownerDocument.documentElement;\n    var scrollingElement = element.ownerDocument.scrollingElement || html;\n    return scrollingElement[upperSide];\n  }\n\n  return element[upperSide];\n}\n\n/*\n * Sum or subtract the element scroll values (left and top) from a given rect object\n * @method\n * @memberof Popper.Utils\n * @param {Object} rect - Rect object you want to change\n * @param {HTMLElement} element - The element from the function reads the scroll values\n * @param {Boolean} subtract - set to true if you want to subtract the scroll values\n * @return {Object} rect - The modifier rect object\n */\nfunction includeScroll(rect, element) {\n  var subtract = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n  var scrollTop = getScroll(element, 'top');\n  var scrollLeft = getScroll(element, 'left');\n  var modifier = subtract ? -1 : 1;\n  rect.top += scrollTop * modifier;\n  rect.bottom += scrollTop * modifier;\n  rect.left += scrollLeft * modifier;\n  rect.right += scrollLeft * modifier;\n  return rect;\n}\n\n/*\n * Helper to detect borders of a given element\n * @method\n * @memberof Popper.Utils\n * @param {CSSStyleDeclaration} styles\n * Result of `getStyleComputedProperty` on the given element\n * @param {String} axis - `x` or `y`\n * @return {number} borders - The borders size of the given axis\n */\n\nfunction getBordersSize(styles, axis) {\n  var sideA = axis === 'x' ? 'Left' : 'Top';\n  var sideB = sideA === 'Left' ? 'Right' : 'Bottom';\n\n  return parseFloat(styles['border' + sideA + 'Width'], 10) + parseFloat(styles['border' + sideB + 'Width'], 10);\n}\n\nfunction getSize(axis, body, html, computedStyle) {\n  return Math.max(body['offset' + axis], body['scroll' + axis], html['client' + axis], html['offset' + axis], html['scroll' + axis], isIE(10) ? parseInt(html['offset' + axis]) + parseInt(computedStyle['margin' + (axis === 'Height' ? 'Top' : 'Left')]) + parseInt(computedStyle['margin' + (axis === 'Height' ? 'Bottom' : 'Right')]) : 0);\n}\n\nfunction getWindowSizes(document) {\n  var body = document.body;\n  var html = document.documentElement;\n  var computedStyle = isIE(10) && getComputedStyle(html);\n\n  return {\n    height: getSize('Height', body, html, computedStyle),\n    width: getSize('Width', body, html, computedStyle)\n  };\n}\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\n\n\n\n\nvar defineProperty = function (obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n};\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\n/**\n * Given element offsets, generate an output similar to getBoundingClientRect\n * @method\n * @memberof Popper.Utils\n * @argument {Object} offsets\n * @returns {Object} ClientRect like output\n */\nfunction getClientRect(offsets) {\n  return _extends({}, offsets, {\n    right: offsets.left + offsets.width,\n    bottom: offsets.top + offsets.height\n  });\n}\n\n/**\n * Get bounding client rect of given element\n * @method\n * @memberof Popper.Utils\n * @param {HTMLElement} element\n * @return {Object} client rect\n */\nfunction getBoundingClientRect(element) {\n  var rect = {};\n\n  // IE10 10 FIX: Please, don't ask, the element isn't\n  // considered in DOM in some circumstances...\n  // This isn't reproducible in IE10 compatibility mode of IE11\n  try {\n    if (isIE(10)) {\n      rect = element.getBoundingClientRect();\n      var scrollTop = getScroll(element, 'top');\n      var scrollLeft = getScroll(element, 'left');\n      rect.top += scrollTop;\n      rect.left += scrollLeft;\n      rect.bottom += scrollTop;\n      rect.right += scrollLeft;\n    } else {\n      rect = element.getBoundingClientRect();\n    }\n  } catch (e) {}\n\n  var result = {\n    left: rect.left,\n    top: rect.top,\n    width: rect.right - rect.left,\n    height: rect.bottom - rect.top\n  };\n\n  // subtract scrollbar size from sizes\n  var sizes = element.nodeName === 'HTML' ? getWindowSizes(element.ownerDocument) : {};\n  var width = sizes.width || element.clientWidth || result.right - result.left;\n  var height = sizes.height || element.clientHeight || result.bottom - result.top;\n\n  var horizScrollbar = element.offsetWidth - width;\n  var vertScrollbar = element.offsetHeight - height;\n\n  // if an hypothetical scrollbar is detected, we must be sure it's not a `border`\n  // we make this check conditional for performance reasons\n  if (horizScrollbar || vertScrollbar) {\n    var styles = getStyleComputedProperty(element);\n    horizScrollbar -= getBordersSize(styles, 'x');\n    vertScrollbar -= getBordersSize(styles, 'y');\n\n    result.width -= horizScrollbar;\n    result.height -= vertScrollbar;\n  }\n\n  return getClientRect(result);\n}\n\nfunction getOffsetRectRelativeToArbitraryNode(children, parent) {\n  var fixedPosition = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n  var isIE10 = isIE(10);\n  var isHTML = parent.nodeName === 'HTML';\n  var childrenRect = getBoundingClientRect(children);\n  var parentRect = getBoundingClientRect(parent);\n  var scrollParent = getScrollParent(children);\n\n  var styles = getStyleComputedProperty(parent);\n  var borderTopWidth = parseFloat(styles.borderTopWidth, 10);\n  var borderLeftWidth = parseFloat(styles.borderLeftWidth, 10);\n\n  // In cases where the parent is fixed, we must ignore negative scroll in offset calc\n  if (fixedPosition && isHTML) {\n    parentRect.top = Math.max(parentRect.top, 0);\n    parentRect.left = Math.max(parentRect.left, 0);\n  }\n  var offsets = getClientRect({\n    top: childrenRect.top - parentRect.top - borderTopWidth,\n    left: childrenRect.left - parentRect.left - borderLeftWidth,\n    width: childrenRect.width,\n    height: childrenRect.height\n  });\n  offsets.marginTop = 0;\n  offsets.marginLeft = 0;\n\n  // Subtract margins of documentElement in case it's being used as parent\n  // we do this only on HTML because it's the only element that behaves\n  // differently when margins are applied to it. The margins are included in\n  // the box of the documentElement, in the other cases not.\n  if (!isIE10 && isHTML) {\n    var marginTop = parseFloat(styles.marginTop, 10);\n    var marginLeft = parseFloat(styles.marginLeft, 10);\n\n    offsets.top -= borderTopWidth - marginTop;\n    offsets.bottom -= borderTopWidth - marginTop;\n    offsets.left -= borderLeftWidth - marginLeft;\n    offsets.right -= borderLeftWidth - marginLeft;\n\n    // Attach marginTop and marginLeft because in some circumstances we may need them\n    offsets.marginTop = marginTop;\n    offsets.marginLeft = marginLeft;\n  }\n\n  if (isIE10 && !fixedPosition ? parent.contains(scrollParent) : parent === scrollParent && scrollParent.nodeName !== 'BODY') {\n    offsets = includeScroll(offsets, parent);\n  }\n\n  return offsets;\n}\n\nfunction getViewportOffsetRectRelativeToArtbitraryNode(element) {\n  var excludeScroll = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  var html = element.ownerDocument.documentElement;\n  var relativeOffset = getOffsetRectRelativeToArbitraryNode(element, html);\n  var width = Math.max(html.clientWidth, window.innerWidth || 0);\n  var height = Math.max(html.clientHeight, window.innerHeight || 0);\n\n  var scrollTop = !excludeScroll ? getScroll(html) : 0;\n  var scrollLeft = !excludeScroll ? getScroll(html, 'left') : 0;\n\n  var offset = {\n    top: scrollTop - relativeOffset.top + relativeOffset.marginTop,\n    left: scrollLeft - relativeOffset.left + relativeOffset.marginLeft,\n    width: width,\n    height: height\n  };\n\n  return getClientRect(offset);\n}\n\n/**\n * Check if the given element is fixed or is inside a fixed parent\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @argument {Element} customContainer\n * @returns {Boolean} answer to \"isFixed?\"\n */\nfunction isFixed(element) {\n  var nodeName = element.nodeName;\n  if (nodeName === 'BODY' || nodeName === 'HTML') {\n    return false;\n  }\n  if (getStyleComputedProperty(element, 'position') === 'fixed') {\n    return true;\n  }\n  var parentNode = getParentNode(element);\n  if (!parentNode) {\n    return false;\n  }\n  return isFixed(parentNode);\n}\n\n/**\n * Finds the first parent of an element that has a transformed property defined\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} first transformed parent or documentElement\n */\n\nfunction getFixedPositionOffsetParent(element) {\n  // This check is needed to avoid errors in case one of the elements isn't defined for any reason\n  if (!element || !element.parentElement || isIE()) {\n    return document.documentElement;\n  }\n  var el = element.parentElement;\n  while (el && getStyleComputedProperty(el, 'transform') === 'none') {\n    el = el.parentElement;\n  }\n  return el || document.documentElement;\n}\n\n/**\n * Computed the boundaries limits and return them\n * @method\n * @memberof Popper.Utils\n * @param {HTMLElement} popper\n * @param {HTMLElement} reference\n * @param {number} padding\n * @param {HTMLElement} boundariesElement - Element used to define the boundaries\n * @param {Boolean} fixedPosition - Is in fixed position mode\n * @returns {Object} Coordinates of the boundaries\n */\nfunction getBoundaries(popper, reference, padding, boundariesElement) {\n  var fixedPosition = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n\n  // NOTE: 1 DOM access here\n\n  var boundaries = { top: 0, left: 0 };\n  var offsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, reference);\n\n  // Handle viewport case\n  if (boundariesElement === 'viewport') {\n    boundaries = getViewportOffsetRectRelativeToArtbitraryNode(offsetParent, fixedPosition);\n  } else {\n    // Handle other cases based on DOM element used as boundaries\n    var boundariesNode = void 0;\n    if (boundariesElement === 'scrollParent') {\n      boundariesNode = getScrollParent(getParentNode(reference));\n      if (boundariesNode.nodeName === 'BODY') {\n        boundariesNode = popper.ownerDocument.documentElement;\n      }\n    } else if (boundariesElement === 'window') {\n      boundariesNode = popper.ownerDocument.documentElement;\n    } else {\n      boundariesNode = boundariesElement;\n    }\n\n    var offsets = getOffsetRectRelativeToArbitraryNode(boundariesNode, offsetParent, fixedPosition);\n\n    // In case of HTML, we need a different computation\n    if (boundariesNode.nodeName === 'HTML' && !isFixed(offsetParent)) {\n      var _getWindowSizes = getWindowSizes(popper.ownerDocument),\n          height = _getWindowSizes.height,\n          width = _getWindowSizes.width;\n\n      boundaries.top += offsets.top - offsets.marginTop;\n      boundaries.bottom = height + offsets.top;\n      boundaries.left += offsets.left - offsets.marginLeft;\n      boundaries.right = width + offsets.left;\n    } else {\n      // for all the other DOM elements, this one is good\n      boundaries = offsets;\n    }\n  }\n\n  // Add paddings\n  padding = padding || 0;\n  var isPaddingNumber = typeof padding === 'number';\n  boundaries.left += isPaddingNumber ? padding : padding.left || 0;\n  boundaries.top += isPaddingNumber ? padding : padding.top || 0;\n  boundaries.right -= isPaddingNumber ? padding : padding.right || 0;\n  boundaries.bottom -= isPaddingNumber ? padding : padding.bottom || 0;\n\n  return boundaries;\n}\n\nfunction getArea(_ref) {\n  var width = _ref.width,\n      height = _ref.height;\n\n  return width * height;\n}\n\n/**\n * Utility used to transform the `auto` placement to the placement with more\n * available space.\n * @method\n * @memberof Popper.Utils\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction computeAutoPlacement(placement, refRect, popper, reference, boundariesElement) {\n  var padding = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;\n\n  if (placement.indexOf('auto') === -1) {\n    return placement;\n  }\n\n  var boundaries = getBoundaries(popper, reference, padding, boundariesElement);\n\n  var rects = {\n    top: {\n      width: boundaries.width,\n      height: refRect.top - boundaries.top\n    },\n    right: {\n      width: boundaries.right - refRect.right,\n      height: boundaries.height\n    },\n    bottom: {\n      width: boundaries.width,\n      height: boundaries.bottom - refRect.bottom\n    },\n    left: {\n      width: refRect.left - boundaries.left,\n      height: boundaries.height\n    }\n  };\n\n  var sortedAreas = Object.keys(rects).map(function (key) {\n    return _extends({\n      key: key\n    }, rects[key], {\n      area: getArea(rects[key])\n    });\n  }).sort(function (a, b) {\n    return b.area - a.area;\n  });\n\n  var filteredAreas = sortedAreas.filter(function (_ref2) {\n    var width = _ref2.width,\n        height = _ref2.height;\n    return width >= popper.clientWidth && height >= popper.clientHeight;\n  });\n\n  var computedPlacement = filteredAreas.length > 0 ? filteredAreas[0].key : sortedAreas[0].key;\n\n  var variation = placement.split('-')[1];\n\n  return computedPlacement + (variation ? '-' + variation : '');\n}\n\n/**\n * Get offsets to the reference element\n * @method\n * @memberof Popper.Utils\n * @param {Object} state\n * @param {Element} popper - the popper element\n * @param {Element} reference - the reference element (the popper will be relative to this)\n * @param {Element} fixedPosition - is in fixed position mode\n * @returns {Object} An object containing the offsets which will be applied to the popper\n */\nfunction getReferenceOffsets(state, popper, reference) {\n  var fixedPosition = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n\n  var commonOffsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, reference);\n  return getOffsetRectRelativeToArbitraryNode(reference, commonOffsetParent, fixedPosition);\n}\n\n/**\n * Get the outer sizes of the given element (offset size + margins)\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Object} object containing width and height properties\n */\nfunction getOuterSizes(element) {\n  var window = element.ownerDocument.defaultView;\n  var styles = window.getComputedStyle(element);\n  var x = parseFloat(styles.marginTop || 0) + parseFloat(styles.marginBottom || 0);\n  var y = parseFloat(styles.marginLeft || 0) + parseFloat(styles.marginRight || 0);\n  var result = {\n    width: element.offsetWidth + y,\n    height: element.offsetHeight + x\n  };\n  return result;\n}\n\n/**\n * Get the opposite placement of the given one\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement\n * @returns {String} flipped placement\n */\nfunction getOppositePlacement(placement) {\n  var hash = { left: 'right', right: 'left', bottom: 'top', top: 'bottom' };\n  return placement.replace(/left|right|bottom|top/g, function (matched) {\n    return hash[matched];\n  });\n}\n\n/**\n * Get offsets to the popper\n * @method\n * @memberof Popper.Utils\n * @param {Object} position - CSS position the Popper will get applied\n * @param {HTMLElement} popper - the popper element\n * @param {Object} referenceOffsets - the reference offsets (the popper will be relative to this)\n * @param {String} placement - one of the valid placement options\n * @returns {Object} popperOffsets - An object containing the offsets which will be applied to the popper\n */\nfunction getPopperOffsets(popper, referenceOffsets, placement) {\n  placement = placement.split('-')[0];\n\n  // Get popper node sizes\n  var popperRect = getOuterSizes(popper);\n\n  // Add position, width and height to our offsets object\n  var popperOffsets = {\n    width: popperRect.width,\n    height: popperRect.height\n  };\n\n  // depending by the popper placement we have to compute its offsets slightly differently\n  var isHoriz = ['right', 'left'].indexOf(placement) !== -1;\n  var mainSide = isHoriz ? 'top' : 'left';\n  var secondarySide = isHoriz ? 'left' : 'top';\n  var measurement = isHoriz ? 'height' : 'width';\n  var secondaryMeasurement = !isHoriz ? 'height' : 'width';\n\n  popperOffsets[mainSide] = referenceOffsets[mainSide] + referenceOffsets[measurement] / 2 - popperRect[measurement] / 2;\n  if (placement === secondarySide) {\n    popperOffsets[secondarySide] = referenceOffsets[secondarySide] - popperRect[secondaryMeasurement];\n  } else {\n    popperOffsets[secondarySide] = referenceOffsets[getOppositePlacement(secondarySide)];\n  }\n\n  return popperOffsets;\n}\n\n/**\n * Mimics the `find` method of Array\n * @method\n * @memberof Popper.Utils\n * @argument {Array} arr\n * @argument prop\n * @argument value\n * @returns index or -1\n */\nfunction find(arr, check) {\n  // use native find if supported\n  if (Array.prototype.find) {\n    return arr.find(check);\n  }\n\n  // use `filter` to obtain the same behavior of `find`\n  return arr.filter(check)[0];\n}\n\n/**\n * Return the index of the matching object\n * @method\n * @memberof Popper.Utils\n * @argument {Array} arr\n * @argument prop\n * @argument value\n * @returns index or -1\n */\nfunction findIndex(arr, prop, value) {\n  // use native findIndex if supported\n  if (Array.prototype.findIndex) {\n    return arr.findIndex(function (cur) {\n      return cur[prop] === value;\n    });\n  }\n\n  // use `find` + `indexOf` if `findIndex` isn't supported\n  var match = find(arr, function (obj) {\n    return obj[prop] === value;\n  });\n  return arr.indexOf(match);\n}\n\n/**\n * Loop trough the list of modifiers and run them in order,\n * each of them will then edit the data object.\n * @method\n * @memberof Popper.Utils\n * @param {dataObject} data\n * @param {Array} modifiers\n * @param {String} ends - Optional modifier name used as stopper\n * @returns {dataObject}\n */\nfunction runModifiers(modifiers, data, ends) {\n  var modifiersToRun = ends === undefined ? modifiers : modifiers.slice(0, findIndex(modifiers, 'name', ends));\n\n  modifiersToRun.forEach(function (modifier) {\n    if (modifier['function']) {\n      // eslint-disable-line dot-notation\n      console.warn('`modifier.function` is deprecated, use `modifier.fn`!');\n    }\n    var fn = modifier['function'] || modifier.fn; // eslint-disable-line dot-notation\n    if (modifier.enabled && isFunction(fn)) {\n      // Add properties to offsets to make them a complete clientRect object\n      // we do this before each modifier to make sure the previous one doesn't\n      // mess with these values\n      data.offsets.popper = getClientRect(data.offsets.popper);\n      data.offsets.reference = getClientRect(data.offsets.reference);\n\n      data = fn(data, modifier);\n    }\n  });\n\n  return data;\n}\n\n/**\n * Updates the position of the popper, computing the new offsets and applying\n * the new style.<br />\n * Prefer `scheduleUpdate` over `update` because of performance reasons.\n * @method\n * @memberof Popper\n */\nfunction update() {\n  // if popper is destroyed, don't perform any further update\n  if (this.state.isDestroyed) {\n    return;\n  }\n\n  var data = {\n    instance: this,\n    styles: {},\n    arrowStyles: {},\n    attributes: {},\n    flipped: false,\n    offsets: {}\n  };\n\n  // compute reference element offsets\n  data.offsets.reference = getReferenceOffsets(this.state, this.popper, this.reference, this.options.positionFixed);\n\n  // compute auto placement, store placement inside the data object,\n  // modifiers will be able to edit `placement` if needed\n  // and refer to originalPlacement to know the original value\n  data.placement = computeAutoPlacement(this.options.placement, data.offsets.reference, this.popper, this.reference, this.options.modifiers.flip.boundariesElement, this.options.modifiers.flip.padding);\n\n  // store the computed placement inside `originalPlacement`\n  data.originalPlacement = data.placement;\n\n  data.positionFixed = this.options.positionFixed;\n\n  // compute the popper offsets\n  data.offsets.popper = getPopperOffsets(this.popper, data.offsets.reference, data.placement);\n\n  data.offsets.popper.position = this.options.positionFixed ? 'fixed' : 'absolute';\n\n  // run the modifiers\n  data = runModifiers(this.modifiers, data);\n\n  // the first `update` will call `onCreate` callback\n  // the other ones will call `onUpdate` callback\n  if (!this.state.isCreated) {\n    this.state.isCreated = true;\n    this.options.onCreate(data);\n  } else {\n    this.options.onUpdate(data);\n  }\n}\n\n/**\n * Helper used to know if the given modifier is enabled.\n * @method\n * @memberof Popper.Utils\n * @returns {Boolean}\n */\nfunction isModifierEnabled(modifiers, modifierName) {\n  return modifiers.some(function (_ref) {\n    var name = _ref.name,\n        enabled = _ref.enabled;\n    return enabled && name === modifierName;\n  });\n}\n\n/**\n * Get the prefixed supported property name\n * @method\n * @memberof Popper.Utils\n * @argument {String} property (camelCase)\n * @returns {String} prefixed property (camelCase or PascalCase, depending on the vendor prefix)\n */\nfunction getSupportedPropertyName(property) {\n  var prefixes = [false, 'ms', 'Webkit', 'Moz', 'O'];\n  var upperProp = property.charAt(0).toUpperCase() + property.slice(1);\n\n  for (var i = 0; i < prefixes.length; i++) {\n    var prefix = prefixes[i];\n    var toCheck = prefix ? '' + prefix + upperProp : property;\n    if (typeof document.body.style[toCheck] !== 'undefined') {\n      return toCheck;\n    }\n  }\n  return null;\n}\n\n/**\n * Destroys the popper.\n * @method\n * @memberof Popper\n */\nfunction destroy() {\n  this.state.isDestroyed = true;\n\n  // touch DOM only if `applyStyle` modifier is enabled\n  if (isModifierEnabled(this.modifiers, 'applyStyle')) {\n    this.popper.removeAttribute('x-placement');\n    this.popper.style.position = '';\n    this.popper.style.top = '';\n    this.popper.style.left = '';\n    this.popper.style.right = '';\n    this.popper.style.bottom = '';\n    this.popper.style.willChange = '';\n    this.popper.style[getSupportedPropertyName('transform')] = '';\n  }\n\n  this.disableEventListeners();\n\n  // remove the popper if user explicity asked for the deletion on destroy\n  // do not use `remove` because IE11 doesn't support it\n  if (this.options.removeOnDestroy) {\n    this.popper.parentNode.removeChild(this.popper);\n  }\n  return this;\n}\n\n/**\n * Get the window associated with the element\n * @argument {Element} element\n * @returns {Window}\n */\nfunction getWindow(element) {\n  var ownerDocument = element.ownerDocument;\n  return ownerDocument ? ownerDocument.defaultView : window;\n}\n\nfunction attachToScrollParents(scrollParent, event, callback, scrollParents) {\n  var isBody = scrollParent.nodeName === 'BODY';\n  var target = isBody ? scrollParent.ownerDocument.defaultView : scrollParent;\n  target.addEventListener(event, callback, { passive: true });\n\n  if (!isBody) {\n    attachToScrollParents(getScrollParent(target.parentNode), event, callback, scrollParents);\n  }\n  scrollParents.push(target);\n}\n\n/**\n * Setup needed event listeners used to update the popper position\n * @method\n * @memberof Popper.Utils\n * @private\n */\nfunction setupEventListeners(reference, options, state, updateBound) {\n  // Resize event listener on window\n  state.updateBound = updateBound;\n  getWindow(reference).addEventListener('resize', state.updateBound, { passive: true });\n\n  // Scroll event listener on scroll parents\n  var scrollElement = getScrollParent(reference);\n  attachToScrollParents(scrollElement, 'scroll', state.updateBound, state.scrollParents);\n  state.scrollElement = scrollElement;\n  state.eventsEnabled = true;\n\n  return state;\n}\n\n/**\n * It will add resize/scroll events and start recalculating\n * position of the popper element when they are triggered.\n * @method\n * @memberof Popper\n */\nfunction enableEventListeners() {\n  if (!this.state.eventsEnabled) {\n    this.state = setupEventListeners(this.reference, this.options, this.state, this.scheduleUpdate);\n  }\n}\n\n/**\n * Remove event listeners used to update the popper position\n * @method\n * @memberof Popper.Utils\n * @private\n */\nfunction removeEventListeners(reference, state) {\n  // Remove resize event listener on window\n  getWindow(reference).removeEventListener('resize', state.updateBound);\n\n  // Remove scroll event listener on scroll parents\n  state.scrollParents.forEach(function (target) {\n    target.removeEventListener('scroll', state.updateBound);\n  });\n\n  // Reset state\n  state.updateBound = null;\n  state.scrollParents = [];\n  state.scrollElement = null;\n  state.eventsEnabled = false;\n  return state;\n}\n\n/**\n * It will remove resize/scroll events and won't recalculate popper position\n * when they are triggered. It also won't trigger `onUpdate` callback anymore,\n * unless you call `update` method manually.\n * @method\n * @memberof Popper\n */\nfunction disableEventListeners() {\n  if (this.state.eventsEnabled) {\n    cancelAnimationFrame(this.scheduleUpdate);\n    this.state = removeEventListeners(this.reference, this.state);\n  }\n}\n\n/**\n * Tells if a given input is a number\n * @method\n * @memberof Popper.Utils\n * @param {*} input to check\n * @return {Boolean}\n */\nfunction isNumeric(n) {\n  return n !== '' && !isNaN(parseFloat(n)) && isFinite(n);\n}\n\n/**\n * Set the style to the given popper\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element - Element to apply the style to\n * @argument {Object} styles\n * Object with a list of properties and values which will be applied to the element\n */\nfunction setStyles(element, styles) {\n  Object.keys(styles).forEach(function (prop) {\n    var unit = '';\n    // add unit if the value is numeric and is one of the following\n    if (['width', 'height', 'top', 'right', 'bottom', 'left'].indexOf(prop) !== -1 && isNumeric(styles[prop])) {\n      unit = 'px';\n    }\n    element.style[prop] = styles[prop] + unit;\n  });\n}\n\n/**\n * Set the attributes to the given popper\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element - Element to apply the attributes to\n * @argument {Object} styles\n * Object with a list of properties and values which will be applied to the element\n */\nfunction setAttributes(element, attributes) {\n  Object.keys(attributes).forEach(function (prop) {\n    var value = attributes[prop];\n    if (value !== false) {\n      element.setAttribute(prop, attributes[prop]);\n    } else {\n      element.removeAttribute(prop);\n    }\n  });\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} data.styles - List of style properties - values to apply to popper element\n * @argument {Object} data.attributes - List of attribute properties - values to apply to popper element\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The same data object\n */\nfunction applyStyle(data) {\n  // any property present in `data.styles` will be applied to the popper,\n  // in this way we can make the 3rd party modifiers add custom styles to it\n  // Be aware, modifiers could override the properties defined in the previous\n  // lines of this modifier!\n  setStyles(data.instance.popper, data.styles);\n\n  // any property present in `data.attributes` will be applied to the popper,\n  // they will be set as HTML attributes of the element\n  setAttributes(data.instance.popper, data.attributes);\n\n  // if arrowElement is defined and arrowStyles has some properties\n  if (data.arrowElement && Object.keys(data.arrowStyles).length) {\n    setStyles(data.arrowElement, data.arrowStyles);\n  }\n\n  return data;\n}\n\n/**\n * Set the x-placement attribute before everything else because it could be used\n * to add margins to the popper margins needs to be calculated to get the\n * correct popper offsets.\n * @method\n * @memberof Popper.modifiers\n * @param {HTMLElement} reference - The reference element used to position the popper\n * @param {HTMLElement} popper - The HTML element used as popper\n * @param {Object} options - Popper.js options\n */\nfunction applyStyleOnLoad(reference, popper, options, modifierOptions, state) {\n  // compute reference element offsets\n  var referenceOffsets = getReferenceOffsets(state, popper, reference, options.positionFixed);\n\n  // compute auto placement, store placement inside the data object,\n  // modifiers will be able to edit `placement` if needed\n  // and refer to originalPlacement to know the original value\n  var placement = computeAutoPlacement(options.placement, referenceOffsets, popper, reference, options.modifiers.flip.boundariesElement, options.modifiers.flip.padding);\n\n  popper.setAttribute('x-placement', placement);\n\n  // Apply `position` to popper before anything else because\n  // without the position applied we can't guarantee correct computations\n  setStyles(popper, { position: options.positionFixed ? 'fixed' : 'absolute' });\n\n  return options;\n}\n\n/**\n * @function\n * @memberof Popper.Utils\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Boolean} shouldRound - If the offsets should be rounded at all\n * @returns {Object} The popper's position offsets rounded\n *\n * The tale of pixel-perfect positioning. It's still not 100% perfect, but as\n * good as it can be within reason.\n * Discussion here: https://github.com/FezVrasta/popper.js/pull/715\n *\n * Low DPI screens cause a popper to be blurry if not using full pixels (Safari\n * as well on High DPI screens).\n *\n * Firefox prefers no rounding for positioning and does not have blurriness on\n * high DPI screens.\n *\n * Only horizontal placement and left/right values need to be considered.\n */\nfunction getRoundedOffsets(data, shouldRound) {\n  var _data$offsets = data.offsets,\n      popper = _data$offsets.popper,\n      reference = _data$offsets.reference;\n  var round = Math.round,\n      floor = Math.floor;\n\n  var noRound = function noRound(v) {\n    return v;\n  };\n\n  var referenceWidth = round(reference.width);\n  var popperWidth = round(popper.width);\n\n  var isVertical = ['left', 'right'].indexOf(data.placement) !== -1;\n  var isVariation = data.placement.indexOf('-') !== -1;\n  var sameWidthParity = referenceWidth % 2 === popperWidth % 2;\n  var bothOddWidth = referenceWidth % 2 === 1 && popperWidth % 2 === 1;\n\n  var horizontalToInteger = !shouldRound ? noRound : isVertical || isVariation || sameWidthParity ? round : floor;\n  var verticalToInteger = !shouldRound ? noRound : round;\n\n  return {\n    left: horizontalToInteger(bothOddWidth && !isVariation && shouldRound ? popper.left - 1 : popper.left),\n    top: verticalToInteger(popper.top),\n    bottom: verticalToInteger(popper.bottom),\n    right: horizontalToInteger(popper.right)\n  };\n}\n\nvar isFirefox = isBrowser && /Firefox/i.test(navigator.userAgent);\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction computeStyle(data, options) {\n  var x = options.x,\n      y = options.y;\n  var popper = data.offsets.popper;\n\n  // Remove this legacy support in Popper.js v2\n\n  var legacyGpuAccelerationOption = find(data.instance.modifiers, function (modifier) {\n    return modifier.name === 'applyStyle';\n  }).gpuAcceleration;\n  if (legacyGpuAccelerationOption !== undefined) {\n    console.warn('WARNING: `gpuAcceleration` option moved to `computeStyle` modifier and will not be supported in future versions of Popper.js!');\n  }\n  var gpuAcceleration = legacyGpuAccelerationOption !== undefined ? legacyGpuAccelerationOption : options.gpuAcceleration;\n\n  var offsetParent = getOffsetParent(data.instance.popper);\n  var offsetParentRect = getBoundingClientRect(offsetParent);\n\n  // Styles\n  var styles = {\n    position: popper.position\n  };\n\n  var offsets = getRoundedOffsets(data, window.devicePixelRatio < 2 || !isFirefox);\n\n  var sideA = x === 'bottom' ? 'top' : 'bottom';\n  var sideB = y === 'right' ? 'left' : 'right';\n\n  // if gpuAcceleration is set to `true` and transform is supported,\n  //  we use `translate3d` to apply the position to the popper we\n  // automatically use the supported prefixed version if needed\n  var prefixedProperty = getSupportedPropertyName('transform');\n\n  // now, let's make a step back and look at this code closely (wtf?)\n  // If the content of the popper grows once it's been positioned, it\n  // may happen that the popper gets misplaced because of the new content\n  // overflowing its reference element\n  // To avoid this problem, we provide two options (x and y), which allow\n  // the consumer to define the offset origin.\n  // If we position a popper on top of a reference element, we can set\n  // `x` to `top` to make the popper grow towards its top instead of\n  // its bottom.\n  var left = void 0,\n      top = void 0;\n  if (sideA === 'bottom') {\n    // when offsetParent is <html> the positioning is relative to the bottom of the screen (excluding the scrollbar)\n    // and not the bottom of the html element\n    if (offsetParent.nodeName === 'HTML') {\n      top = -offsetParent.clientHeight + offsets.bottom;\n    } else {\n      top = -offsetParentRect.height + offsets.bottom;\n    }\n  } else {\n    top = offsets.top;\n  }\n  if (sideB === 'right') {\n    if (offsetParent.nodeName === 'HTML') {\n      left = -offsetParent.clientWidth + offsets.right;\n    } else {\n      left = -offsetParentRect.width + offsets.right;\n    }\n  } else {\n    left = offsets.left;\n  }\n  if (gpuAcceleration && prefixedProperty) {\n    styles[prefixedProperty] = 'translate3d(' + left + 'px, ' + top + 'px, 0)';\n    styles[sideA] = 0;\n    styles[sideB] = 0;\n    styles.willChange = 'transform';\n  } else {\n    // othwerise, we use the standard `top`, `left`, `bottom` and `right` properties\n    var invertTop = sideA === 'bottom' ? -1 : 1;\n    var invertLeft = sideB === 'right' ? -1 : 1;\n    styles[sideA] = top * invertTop;\n    styles[sideB] = left * invertLeft;\n    styles.willChange = sideA + ', ' + sideB;\n  }\n\n  // Attributes\n  var attributes = {\n    'x-placement': data.placement\n  };\n\n  // Update `data` attributes, styles and arrowStyles\n  data.attributes = _extends({}, attributes, data.attributes);\n  data.styles = _extends({}, styles, data.styles);\n  data.arrowStyles = _extends({}, data.offsets.arrow, data.arrowStyles);\n\n  return data;\n}\n\n/**\n * Helper used to know if the given modifier depends from another one.<br />\n * It checks if the needed modifier is listed and enabled.\n * @method\n * @memberof Popper.Utils\n * @param {Array} modifiers - list of modifiers\n * @param {String} requestingName - name of requesting modifier\n * @param {String} requestedName - name of requested modifier\n * @returns {Boolean}\n */\nfunction isModifierRequired(modifiers, requestingName, requestedName) {\n  var requesting = find(modifiers, function (_ref) {\n    var name = _ref.name;\n    return name === requestingName;\n  });\n\n  var isRequired = !!requesting && modifiers.some(function (modifier) {\n    return modifier.name === requestedName && modifier.enabled && modifier.order < requesting.order;\n  });\n\n  if (!isRequired) {\n    var _requesting = '`' + requestingName + '`';\n    var requested = '`' + requestedName + '`';\n    console.warn(requested + ' modifier is required by ' + _requesting + ' modifier in order to work, be sure to include it before ' + _requesting + '!');\n  }\n  return isRequired;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction arrow(data, options) {\n  var _data$offsets$arrow;\n\n  // arrow depends on keepTogether in order to work\n  if (!isModifierRequired(data.instance.modifiers, 'arrow', 'keepTogether')) {\n    return data;\n  }\n\n  var arrowElement = options.element;\n\n  // if arrowElement is a string, suppose it's a CSS selector\n  if (typeof arrowElement === 'string') {\n    arrowElement = data.instance.popper.querySelector(arrowElement);\n\n    // if arrowElement is not found, don't run the modifier\n    if (!arrowElement) {\n      return data;\n    }\n  } else {\n    // if the arrowElement isn't a query selector we must check that the\n    // provided DOM node is child of its popper node\n    if (!data.instance.popper.contains(arrowElement)) {\n      console.warn('WARNING: `arrow.element` must be child of its popper element!');\n      return data;\n    }\n  }\n\n  var placement = data.placement.split('-')[0];\n  var _data$offsets = data.offsets,\n      popper = _data$offsets.popper,\n      reference = _data$offsets.reference;\n\n  var isVertical = ['left', 'right'].indexOf(placement) !== -1;\n\n  var len = isVertical ? 'height' : 'width';\n  var sideCapitalized = isVertical ? 'Top' : 'Left';\n  var side = sideCapitalized.toLowerCase();\n  var altSide = isVertical ? 'left' : 'top';\n  var opSide = isVertical ? 'bottom' : 'right';\n  var arrowElementSize = getOuterSizes(arrowElement)[len];\n\n  //\n  // extends keepTogether behavior making sure the popper and its\n  // reference have enough pixels in conjunction\n  //\n\n  // top/left side\n  if (reference[opSide] - arrowElementSize < popper[side]) {\n    data.offsets.popper[side] -= popper[side] - (reference[opSide] - arrowElementSize);\n  }\n  // bottom/right side\n  if (reference[side] + arrowElementSize > popper[opSide]) {\n    data.offsets.popper[side] += reference[side] + arrowElementSize - popper[opSide];\n  }\n  data.offsets.popper = getClientRect(data.offsets.popper);\n\n  // compute center of the popper\n  var center = reference[side] + reference[len] / 2 - arrowElementSize / 2;\n\n  // Compute the sideValue using the updated popper offsets\n  // take popper margin in account because we don't have this info available\n  var css = getStyleComputedProperty(data.instance.popper);\n  var popperMarginSide = parseFloat(css['margin' + sideCapitalized], 10);\n  var popperBorderSide = parseFloat(css['border' + sideCapitalized + 'Width'], 10);\n  var sideValue = center - data.offsets.popper[side] - popperMarginSide - popperBorderSide;\n\n  // prevent arrowElement from being placed not contiguously to its popper\n  sideValue = Math.max(Math.min(popper[len] - arrowElementSize, sideValue), 0);\n\n  data.arrowElement = arrowElement;\n  data.offsets.arrow = (_data$offsets$arrow = {}, defineProperty(_data$offsets$arrow, side, Math.round(sideValue)), defineProperty(_data$offsets$arrow, altSide, ''), _data$offsets$arrow);\n\n  return data;\n}\n\n/**\n * Get the opposite placement variation of the given one\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement variation\n * @returns {String} flipped placement variation\n */\nfunction getOppositeVariation(variation) {\n  if (variation === 'end') {\n    return 'start';\n  } else if (variation === 'start') {\n    return 'end';\n  }\n  return variation;\n}\n\n/**\n * List of accepted placements to use as values of the `placement` option.<br />\n * Valid placements are:\n * - `auto`\n * - `top`\n * - `right`\n * - `bottom`\n * - `left`\n *\n * Each placement can have a variation from this list:\n * - `-start`\n * - `-end`\n *\n * Variations are interpreted easily if you think of them as the left to right\n * written languages. Horizontally (`top` and `bottom`), `start` is left and `end`\n * is right.<br />\n * Vertically (`left` and `right`), `start` is top and `end` is bottom.\n *\n * Some valid examples are:\n * - `top-end` (on top of reference, right aligned)\n * - `right-start` (on right of reference, top aligned)\n * - `bottom` (on bottom, centered)\n * - `auto-end` (on the side with more space available, alignment depends by placement)\n *\n * @static\n * @type {Array}\n * @enum {String}\n * @readonly\n * @method placements\n * @memberof Popper\n */\nvar placements = ['auto-start', 'auto', 'auto-end', 'top-start', 'top', 'top-end', 'right-start', 'right', 'right-end', 'bottom-end', 'bottom', 'bottom-start', 'left-end', 'left', 'left-start'];\n\n// Get rid of `auto` `auto-start` and `auto-end`\nvar validPlacements = placements.slice(3);\n\n/**\n * Given an initial placement, returns all the subsequent placements\n * clockwise (or counter-clockwise).\n *\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement - A valid placement (it accepts variations)\n * @argument {Boolean} counter - Set to true to walk the placements counterclockwise\n * @returns {Array} placements including their variations\n */\nfunction clockwise(placement) {\n  var counter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  var index = validPlacements.indexOf(placement);\n  var arr = validPlacements.slice(index + 1).concat(validPlacements.slice(0, index));\n  return counter ? arr.reverse() : arr;\n}\n\nvar BEHAVIORS = {\n  FLIP: 'flip',\n  CLOCKWISE: 'clockwise',\n  COUNTERCLOCKWISE: 'counterclockwise'\n};\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction flip(data, options) {\n  // if `inner` modifier is enabled, we can't use the `flip` modifier\n  if (isModifierEnabled(data.instance.modifiers, 'inner')) {\n    return data;\n  }\n\n  if (data.flipped && data.placement === data.originalPlacement) {\n    // seems like flip is trying to loop, probably there's not enough space on any of the flippable sides\n    return data;\n  }\n\n  var boundaries = getBoundaries(data.instance.popper, data.instance.reference, options.padding, options.boundariesElement, data.positionFixed);\n\n  var placement = data.placement.split('-')[0];\n  var placementOpposite = getOppositePlacement(placement);\n  var variation = data.placement.split('-')[1] || '';\n\n  var flipOrder = [];\n\n  switch (options.behavior) {\n    case BEHAVIORS.FLIP:\n      flipOrder = [placement, placementOpposite];\n      break;\n    case BEHAVIORS.CLOCKWISE:\n      flipOrder = clockwise(placement);\n      break;\n    case BEHAVIORS.COUNTERCLOCKWISE:\n      flipOrder = clockwise(placement, true);\n      break;\n    default:\n      flipOrder = options.behavior;\n  }\n\n  flipOrder.forEach(function (step, index) {\n    if (placement !== step || flipOrder.length === index + 1) {\n      return data;\n    }\n\n    placement = data.placement.split('-')[0];\n    placementOpposite = getOppositePlacement(placement);\n\n    var popperOffsets = data.offsets.popper;\n    var refOffsets = data.offsets.reference;\n\n    // using floor because the reference offsets may contain decimals we are not going to consider here\n    var floor = Math.floor;\n    var overlapsRef = placement === 'left' && floor(popperOffsets.right) > floor(refOffsets.left) || placement === 'right' && floor(popperOffsets.left) < floor(refOffsets.right) || placement === 'top' && floor(popperOffsets.bottom) > floor(refOffsets.top) || placement === 'bottom' && floor(popperOffsets.top) < floor(refOffsets.bottom);\n\n    var overflowsLeft = floor(popperOffsets.left) < floor(boundaries.left);\n    var overflowsRight = floor(popperOffsets.right) > floor(boundaries.right);\n    var overflowsTop = floor(popperOffsets.top) < floor(boundaries.top);\n    var overflowsBottom = floor(popperOffsets.bottom) > floor(boundaries.bottom);\n\n    var overflowsBoundaries = placement === 'left' && overflowsLeft || placement === 'right' && overflowsRight || placement === 'top' && overflowsTop || placement === 'bottom' && overflowsBottom;\n\n    // flip the variation if required\n    var isVertical = ['top', 'bottom'].indexOf(placement) !== -1;\n\n    // flips variation if reference element overflows boundaries\n    var flippedVariationByRef = !!options.flipVariations && (isVertical && variation === 'start' && overflowsLeft || isVertical && variation === 'end' && overflowsRight || !isVertical && variation === 'start' && overflowsTop || !isVertical && variation === 'end' && overflowsBottom);\n\n    // flips variation if popper content overflows boundaries\n    var flippedVariationByContent = !!options.flipVariationsByContent && (isVertical && variation === 'start' && overflowsRight || isVertical && variation === 'end' && overflowsLeft || !isVertical && variation === 'start' && overflowsBottom || !isVertical && variation === 'end' && overflowsTop);\n\n    var flippedVariation = flippedVariationByRef || flippedVariationByContent;\n\n    if (overlapsRef || overflowsBoundaries || flippedVariation) {\n      // this boolean to detect any flip loop\n      data.flipped = true;\n\n      if (overlapsRef || overflowsBoundaries) {\n        placement = flipOrder[index + 1];\n      }\n\n      if (flippedVariation) {\n        variation = getOppositeVariation(variation);\n      }\n\n      data.placement = placement + (variation ? '-' + variation : '');\n\n      // this object contains `position`, we want to preserve it along with\n      // any additional property we may add in the future\n      data.offsets.popper = _extends({}, data.offsets.popper, getPopperOffsets(data.instance.popper, data.offsets.reference, data.placement));\n\n      data = runModifiers(data.instance.modifiers, data, 'flip');\n    }\n  });\n  return data;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction keepTogether(data) {\n  var _data$offsets = data.offsets,\n      popper = _data$offsets.popper,\n      reference = _data$offsets.reference;\n\n  var placement = data.placement.split('-')[0];\n  var floor = Math.floor;\n  var isVertical = ['top', 'bottom'].indexOf(placement) !== -1;\n  var side = isVertical ? 'right' : 'bottom';\n  var opSide = isVertical ? 'left' : 'top';\n  var measurement = isVertical ? 'width' : 'height';\n\n  if (popper[side] < floor(reference[opSide])) {\n    data.offsets.popper[opSide] = floor(reference[opSide]) - popper[measurement];\n  }\n  if (popper[opSide] > floor(reference[side])) {\n    data.offsets.popper[opSide] = floor(reference[side]);\n  }\n\n  return data;\n}\n\n/**\n * Converts a string containing value + unit into a px value number\n * @function\n * @memberof {modifiers~offset}\n * @private\n * @argument {String} str - Value + unit string\n * @argument {String} measurement - `height` or `width`\n * @argument {Object} popperOffsets\n * @argument {Object} referenceOffsets\n * @returns {Number|String}\n * Value in pixels, or original string if no values were extracted\n */\nfunction toValue(str, measurement, popperOffsets, referenceOffsets) {\n  // separate value from unit\n  var split = str.match(/((?:\\-|\\+)?\\d*\\.?\\d*)(.*)/);\n  var value = +split[1];\n  var unit = split[2];\n\n  // If it's not a number it's an operator, I guess\n  if (!value) {\n    return str;\n  }\n\n  if (unit.indexOf('%') === 0) {\n    var element = void 0;\n    switch (unit) {\n      case '%p':\n        element = popperOffsets;\n        break;\n      case '%':\n      case '%r':\n      default:\n        element = referenceOffsets;\n    }\n\n    var rect = getClientRect(element);\n    return rect[measurement] / 100 * value;\n  } else if (unit === 'vh' || unit === 'vw') {\n    // if is a vh or vw, we calculate the size based on the viewport\n    var size = void 0;\n    if (unit === 'vh') {\n      size = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\n    } else {\n      size = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);\n    }\n    return size / 100 * value;\n  } else {\n    // if is an explicit pixel unit, we get rid of the unit and keep the value\n    // if is an implicit unit, it's px, and we return just the value\n    return value;\n  }\n}\n\n/**\n * Parse an `offset` string to extrapolate `x` and `y` numeric offsets.\n * @function\n * @memberof {modifiers~offset}\n * @private\n * @argument {String} offset\n * @argument {Object} popperOffsets\n * @argument {Object} referenceOffsets\n * @argument {String} basePlacement\n * @returns {Array} a two cells array with x and y offsets in numbers\n */\nfunction parseOffset(offset, popperOffsets, referenceOffsets, basePlacement) {\n  var offsets = [0, 0];\n\n  // Use height if placement is left or right and index is 0 otherwise use width\n  // in this way the first offset will use an axis and the second one\n  // will use the other one\n  var useHeight = ['right', 'left'].indexOf(basePlacement) !== -1;\n\n  // Split the offset string to obtain a list of values and operands\n  // The regex addresses values with the plus or minus sign in front (+10, -20, etc)\n  var fragments = offset.split(/(\\+|\\-)/).map(function (frag) {\n    return frag.trim();\n  });\n\n  // Detect if the offset string contains a pair of values or a single one\n  // they could be separated by comma or space\n  var divider = fragments.indexOf(find(fragments, function (frag) {\n    return frag.search(/,|\\s/) !== -1;\n  }));\n\n  if (fragments[divider] && fragments[divider].indexOf(',') === -1) {\n    console.warn('Offsets separated by white space(s) are deprecated, use a comma (,) instead.');\n  }\n\n  // If divider is found, we divide the list of values and operands to divide\n  // them by ofset X and Y.\n  var splitRegex = /\\s*,\\s*|\\s+/;\n  var ops = divider !== -1 ? [fragments.slice(0, divider).concat([fragments[divider].split(splitRegex)[0]]), [fragments[divider].split(splitRegex)[1]].concat(fragments.slice(divider + 1))] : [fragments];\n\n  // Convert the values with units to absolute pixels to allow our computations\n  ops = ops.map(function (op, index) {\n    // Most of the units rely on the orientation of the popper\n    var measurement = (index === 1 ? !useHeight : useHeight) ? 'height' : 'width';\n    var mergeWithPrevious = false;\n    return op\n    // This aggregates any `+` or `-` sign that aren't considered operators\n    // e.g.: 10 + +5 => [10, +, +5]\n    .reduce(function (a, b) {\n      if (a[a.length - 1] === '' && ['+', '-'].indexOf(b) !== -1) {\n        a[a.length - 1] = b;\n        mergeWithPrevious = true;\n        return a;\n      } else if (mergeWithPrevious) {\n        a[a.length - 1] += b;\n        mergeWithPrevious = false;\n        return a;\n      } else {\n        return a.concat(b);\n      }\n    }, [])\n    // Here we convert the string values into number values (in px)\n    .map(function (str) {\n      return toValue(str, measurement, popperOffsets, referenceOffsets);\n    });\n  });\n\n  // Loop trough the offsets arrays and execute the operations\n  ops.forEach(function (op, index) {\n    op.forEach(function (frag, index2) {\n      if (isNumeric(frag)) {\n        offsets[index] += frag * (op[index2 - 1] === '-' ? -1 : 1);\n      }\n    });\n  });\n  return offsets;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @argument {Number|String} options.offset=0\n * The offset value as described in the modifier description\n * @returns {Object} The data object, properly modified\n */\nfunction offset(data, _ref) {\n  var offset = _ref.offset;\n  var placement = data.placement,\n      _data$offsets = data.offsets,\n      popper = _data$offsets.popper,\n      reference = _data$offsets.reference;\n\n  var basePlacement = placement.split('-')[0];\n\n  var offsets = void 0;\n  if (isNumeric(+offset)) {\n    offsets = [+offset, 0];\n  } else {\n    offsets = parseOffset(offset, popper, reference, basePlacement);\n  }\n\n  if (basePlacement === 'left') {\n    popper.top += offsets[0];\n    popper.left -= offsets[1];\n  } else if (basePlacement === 'right') {\n    popper.top += offsets[0];\n    popper.left += offsets[1];\n  } else if (basePlacement === 'top') {\n    popper.left += offsets[0];\n    popper.top -= offsets[1];\n  } else if (basePlacement === 'bottom') {\n    popper.left += offsets[0];\n    popper.top += offsets[1];\n  }\n\n  data.popper = popper;\n  return data;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction preventOverflow(data, options) {\n  var boundariesElement = options.boundariesElement || getOffsetParent(data.instance.popper);\n\n  // If offsetParent is the reference element, we really want to\n  // go one step up and use the next offsetParent as reference to\n  // avoid to make this modifier completely useless and look like broken\n  if (data.instance.reference === boundariesElement) {\n    boundariesElement = getOffsetParent(boundariesElement);\n  }\n\n  // NOTE: DOM access here\n  // resets the popper's position so that the document size can be calculated excluding\n  // the size of the popper element itself\n  var transformProp = getSupportedPropertyName('transform');\n  var popperStyles = data.instance.popper.style; // assignment to help minification\n  var top = popperStyles.top,\n      left = popperStyles.left,\n      transform = popperStyles[transformProp];\n\n  popperStyles.top = '';\n  popperStyles.left = '';\n  popperStyles[transformProp] = '';\n\n  var boundaries = getBoundaries(data.instance.popper, data.instance.reference, options.padding, boundariesElement, data.positionFixed);\n\n  // NOTE: DOM access here\n  // restores the original style properties after the offsets have been computed\n  popperStyles.top = top;\n  popperStyles.left = left;\n  popperStyles[transformProp] = transform;\n\n  options.boundaries = boundaries;\n\n  var order = options.priority;\n  var popper = data.offsets.popper;\n\n  var check = {\n    primary: function primary(placement) {\n      var value = popper[placement];\n      if (popper[placement] < boundaries[placement] && !options.escapeWithReference) {\n        value = Math.max(popper[placement], boundaries[placement]);\n      }\n      return defineProperty({}, placement, value);\n    },\n    secondary: function secondary(placement) {\n      var mainSide = placement === 'right' ? 'left' : 'top';\n      var value = popper[mainSide];\n      if (popper[placement] > boundaries[placement] && !options.escapeWithReference) {\n        value = Math.min(popper[mainSide], boundaries[placement] - (placement === 'right' ? popper.width : popper.height));\n      }\n      return defineProperty({}, mainSide, value);\n    }\n  };\n\n  order.forEach(function (placement) {\n    var side = ['left', 'top'].indexOf(placement) !== -1 ? 'primary' : 'secondary';\n    popper = _extends({}, popper, check[side](placement));\n  });\n\n  data.offsets.popper = popper;\n\n  return data;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction shift(data) {\n  var placement = data.placement;\n  var basePlacement = placement.split('-')[0];\n  var shiftvariation = placement.split('-')[1];\n\n  // if shift shiftvariation is specified, run the modifier\n  if (shiftvariation) {\n    var _data$offsets = data.offsets,\n        reference = _data$offsets.reference,\n        popper = _data$offsets.popper;\n\n    var isVertical = ['bottom', 'top'].indexOf(basePlacement) !== -1;\n    var side = isVertical ? 'left' : 'top';\n    var measurement = isVertical ? 'width' : 'height';\n\n    var shiftOffsets = {\n      start: defineProperty({}, side, reference[side]),\n      end: defineProperty({}, side, reference[side] + reference[measurement] - popper[measurement])\n    };\n\n    data.offsets.popper = _extends({}, popper, shiftOffsets[shiftvariation]);\n  }\n\n  return data;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction hide(data) {\n  if (!isModifierRequired(data.instance.modifiers, 'hide', 'preventOverflow')) {\n    return data;\n  }\n\n  var refRect = data.offsets.reference;\n  var bound = find(data.instance.modifiers, function (modifier) {\n    return modifier.name === 'preventOverflow';\n  }).boundaries;\n\n  if (refRect.bottom < bound.top || refRect.left > bound.right || refRect.top > bound.bottom || refRect.right < bound.left) {\n    // Avoid unnecessary DOM access if visibility hasn't changed\n    if (data.hide === true) {\n      return data;\n    }\n\n    data.hide = true;\n    data.attributes['x-out-of-boundaries'] = '';\n  } else {\n    // Avoid unnecessary DOM access if visibility hasn't changed\n    if (data.hide === false) {\n      return data;\n    }\n\n    data.hide = false;\n    data.attributes['x-out-of-boundaries'] = false;\n  }\n\n  return data;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction inner(data) {\n  var placement = data.placement;\n  var basePlacement = placement.split('-')[0];\n  var _data$offsets = data.offsets,\n      popper = _data$offsets.popper,\n      reference = _data$offsets.reference;\n\n  var isHoriz = ['left', 'right'].indexOf(basePlacement) !== -1;\n\n  var subtractLength = ['top', 'left'].indexOf(basePlacement) === -1;\n\n  popper[isHoriz ? 'left' : 'top'] = reference[basePlacement] - (subtractLength ? popper[isHoriz ? 'width' : 'height'] : 0);\n\n  data.placement = getOppositePlacement(placement);\n  data.offsets.popper = getClientRect(popper);\n\n  return data;\n}\n\n/**\n * Modifier function, each modifier can have a function of this type assigned\n * to its `fn` property.<br />\n * These functions will be called on each update, this means that you must\n * make sure they are performant enough to avoid performance bottlenecks.\n *\n * @function ModifierFn\n * @argument {dataObject} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {dataObject} The data object, properly modified\n */\n\n/**\n * Modifiers are plugins used to alter the behavior of your poppers.<br />\n * Popper.js uses a set of 9 modifiers to provide all the basic functionalities\n * needed by the library.\n *\n * Usually you don't want to override the `order`, `fn` and `onLoad` props.\n * All the other properties are configurations that could be tweaked.\n * @namespace modifiers\n */\nvar modifiers = {\n  /**\n   * Modifier used to shift the popper on the start or end of its reference\n   * element.<br />\n   * It will read the variation of the `placement` property.<br />\n   * It can be one either `-end` or `-start`.\n   * @memberof modifiers\n   * @inner\n   */\n  shift: {\n    /** @prop {number} order=100 - Index used to define the order of execution */\n    order: 100,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: shift\n  },\n\n  /**\n   * The `offset` modifier can shift your popper on both its axis.\n   *\n   * It accepts the following units:\n   * - `px` or unit-less, interpreted as pixels\n   * - `%` or `%r`, percentage relative to the length of the reference element\n   * - `%p`, percentage relative to the length of the popper element\n   * - `vw`, CSS viewport width unit\n   * - `vh`, CSS viewport height unit\n   *\n   * For length is intended the main axis relative to the placement of the popper.<br />\n   * This means that if the placement is `top` or `bottom`, the length will be the\n   * `width`. In case of `left` or `right`, it will be the `height`.\n   *\n   * You can provide a single value (as `Number` or `String`), or a pair of values\n   * as `String` divided by a comma or one (or more) white spaces.<br />\n   * The latter is a deprecated method because it leads to confusion and will be\n   * removed in v2.<br />\n   * Additionally, it accepts additions and subtractions between different units.\n   * Note that multiplications and divisions aren't supported.\n   *\n   * Valid examples are:\n   * ```\n   * 10\n   * '10%'\n   * '10, 10'\n   * '10%, 10'\n   * '10 + 10%'\n   * '10 - 5vh + 3%'\n   * '-10px + 5vh, 5px - 6%'\n   * ```\n   * > **NB**: If you desire to apply offsets to your poppers in a way that may make them overlap\n   * > with their reference element, unfortunately, you will have to disable the `flip` modifier.\n   * > You can read more on this at this [issue](https://github.com/FezVrasta/popper.js/issues/373).\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  offset: {\n    /** @prop {number} order=200 - Index used to define the order of execution */\n    order: 200,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: offset,\n    /** @prop {Number|String} offset=0\n     * The offset value as described in the modifier description\n     */\n    offset: 0\n  },\n\n  /**\n   * Modifier used to prevent the popper from being positioned outside the boundary.\n   *\n   * A scenario exists where the reference itself is not within the boundaries.<br />\n   * We can say it has \"escaped the boundaries\" — or just \"escaped\".<br />\n   * In this case we need to decide whether the popper should either:\n   *\n   * - detach from the reference and remain \"trapped\" in the boundaries, or\n   * - if it should ignore the boundary and \"escape with its reference\"\n   *\n   * When `escapeWithReference` is set to`true` and reference is completely\n   * outside its boundaries, the popper will overflow (or completely leave)\n   * the boundaries in order to remain attached to the edge of the reference.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  preventOverflow: {\n    /** @prop {number} order=300 - Index used to define the order of execution */\n    order: 300,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: preventOverflow,\n    /**\n     * @prop {Array} [priority=['left','right','top','bottom']]\n     * Popper will try to prevent overflow following these priorities by default,\n     * then, it could overflow on the left and on top of the `boundariesElement`\n     */\n    priority: ['left', 'right', 'top', 'bottom'],\n    /**\n     * @prop {number} padding=5\n     * Amount of pixel used to define a minimum distance between the boundaries\n     * and the popper. This makes sure the popper always has a little padding\n     * between the edges of its container\n     */\n    padding: 5,\n    /**\n     * @prop {String|HTMLElement} boundariesElement='scrollParent'\n     * Boundaries used by the modifier. Can be `scrollParent`, `window`,\n     * `viewport` or any DOM element.\n     */\n    boundariesElement: 'scrollParent'\n  },\n\n  /**\n   * Modifier used to make sure the reference and its popper stay near each other\n   * without leaving any gap between the two. Especially useful when the arrow is\n   * enabled and you want to ensure that it points to its reference element.\n   * It cares only about the first axis. You can still have poppers with margin\n   * between the popper and its reference element.\n   * @memberof modifiers\n   * @inner\n   */\n  keepTogether: {\n    /** @prop {number} order=400 - Index used to define the order of execution */\n    order: 400,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: keepTogether\n  },\n\n  /**\n   * This modifier is used to move the `arrowElement` of the popper to make\n   * sure it is positioned between the reference element and its popper element.\n   * It will read the outer size of the `arrowElement` node to detect how many\n   * pixels of conjunction are needed.\n   *\n   * It has no effect if no `arrowElement` is provided.\n   * @memberof modifiers\n   * @inner\n   */\n  arrow: {\n    /** @prop {number} order=500 - Index used to define the order of execution */\n    order: 500,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: arrow,\n    /** @prop {String|HTMLElement} element='[x-arrow]' - Selector or node used as arrow */\n    element: '[x-arrow]'\n  },\n\n  /**\n   * Modifier used to flip the popper's placement when it starts to overlap its\n   * reference element.\n   *\n   * Requires the `preventOverflow` modifier before it in order to work.\n   *\n   * **NOTE:** this modifier will interrupt the current update cycle and will\n   * restart it if it detects the need to flip the placement.\n   * @memberof modifiers\n   * @inner\n   */\n  flip: {\n    /** @prop {number} order=600 - Index used to define the order of execution */\n    order: 600,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: flip,\n    /**\n     * @prop {String|Array} behavior='flip'\n     * The behavior used to change the popper's placement. It can be one of\n     * `flip`, `clockwise`, `counterclockwise` or an array with a list of valid\n     * placements (with optional variations)\n     */\n    behavior: 'flip',\n    /**\n     * @prop {number} padding=5\n     * The popper will flip if it hits the edges of the `boundariesElement`\n     */\n    padding: 5,\n    /**\n     * @prop {String|HTMLElement} boundariesElement='viewport'\n     * The element which will define the boundaries of the popper position.\n     * The popper will never be placed outside of the defined boundaries\n     * (except if `keepTogether` is enabled)\n     */\n    boundariesElement: 'viewport',\n    /**\n     * @prop {Boolean} flipVariations=false\n     * The popper will switch placement variation between `-start` and `-end` when\n     * the reference element overlaps its boundaries.\n     *\n     * The original placement should have a set variation.\n     */\n    flipVariations: false,\n    /**\n     * @prop {Boolean} flipVariationsByContent=false\n     * The popper will switch placement variation between `-start` and `-end` when\n     * the popper element overlaps its reference boundaries.\n     *\n     * The original placement should have a set variation.\n     */\n    flipVariationsByContent: false\n  },\n\n  /**\n   * Modifier used to make the popper flow toward the inner of the reference element.\n   * By default, when this modifier is disabled, the popper will be placed outside\n   * the reference element.\n   * @memberof modifiers\n   * @inner\n   */\n  inner: {\n    /** @prop {number} order=700 - Index used to define the order of execution */\n    order: 700,\n    /** @prop {Boolean} enabled=false - Whether the modifier is enabled or not */\n    enabled: false,\n    /** @prop {ModifierFn} */\n    fn: inner\n  },\n\n  /**\n   * Modifier used to hide the popper when its reference element is outside of the\n   * popper boundaries. It will set a `x-out-of-boundaries` attribute which can\n   * be used to hide with a CSS selector the popper when its reference is\n   * out of boundaries.\n   *\n   * Requires the `preventOverflow` modifier before it in order to work.\n   * @memberof modifiers\n   * @inner\n   */\n  hide: {\n    /** @prop {number} order=800 - Index used to define the order of execution */\n    order: 800,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: hide\n  },\n\n  /**\n   * Computes the style that will be applied to the popper element to gets\n   * properly positioned.\n   *\n   * Note that this modifier will not touch the DOM, it just prepares the styles\n   * so that `applyStyle` modifier can apply it. This separation is useful\n   * in case you need to replace `applyStyle` with a custom implementation.\n   *\n   * This modifier has `850` as `order` value to maintain backward compatibility\n   * with previous versions of Popper.js. Expect the modifiers ordering method\n   * to change in future major versions of the library.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  computeStyle: {\n    /** @prop {number} order=850 - Index used to define the order of execution */\n    order: 850,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: computeStyle,\n    /**\n     * @prop {Boolean} gpuAcceleration=true\n     * If true, it uses the CSS 3D transformation to position the popper.\n     * Otherwise, it will use the `top` and `left` properties\n     */\n    gpuAcceleration: true,\n    /**\n     * @prop {string} [x='bottom']\n     * Where to anchor the X axis (`bottom` or `top`). AKA X offset origin.\n     * Change this if your popper should grow in a direction different from `bottom`\n     */\n    x: 'bottom',\n    /**\n     * @prop {string} [x='left']\n     * Where to anchor the Y axis (`left` or `right`). AKA Y offset origin.\n     * Change this if your popper should grow in a direction different from `right`\n     */\n    y: 'right'\n  },\n\n  /**\n   * Applies the computed styles to the popper element.\n   *\n   * All the DOM manipulations are limited to this modifier. This is useful in case\n   * you want to integrate Popper.js inside a framework or view library and you\n   * want to delegate all the DOM manipulations to it.\n   *\n   * Note that if you disable this modifier, you must make sure the popper element\n   * has its position set to `absolute` before Popper.js can do its work!\n   *\n   * Just disable this modifier and define your own to achieve the desired effect.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  applyStyle: {\n    /** @prop {number} order=900 - Index used to define the order of execution */\n    order: 900,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: applyStyle,\n    /** @prop {Function} */\n    onLoad: applyStyleOnLoad,\n    /**\n     * @deprecated since version 1.10.0, the property moved to `computeStyle` modifier\n     * @prop {Boolean} gpuAcceleration=true\n     * If true, it uses the CSS 3D transformation to position the popper.\n     * Otherwise, it will use the `top` and `left` properties\n     */\n    gpuAcceleration: undefined\n  }\n};\n\n/**\n * The `dataObject` is an object containing all the information used by Popper.js.\n * This object is passed to modifiers and to the `onCreate` and `onUpdate` callbacks.\n * @name dataObject\n * @property {Object} data.instance The Popper.js instance\n * @property {String} data.placement Placement applied to popper\n * @property {String} data.originalPlacement Placement originally defined on init\n * @property {Boolean} data.flipped True if popper has been flipped by flip modifier\n * @property {Boolean} data.hide True if the reference element is out of boundaries, useful to know when to hide the popper\n * @property {HTMLElement} data.arrowElement Node used as arrow by arrow modifier\n * @property {Object} data.styles Any CSS property defined here will be applied to the popper. It expects the JavaScript nomenclature (eg. `marginBottom`)\n * @property {Object} data.arrowStyles Any CSS property defined here will be applied to the popper arrow. It expects the JavaScript nomenclature (eg. `marginBottom`)\n * @property {Object} data.boundaries Offsets of the popper boundaries\n * @property {Object} data.offsets The measurements of popper, reference and arrow elements\n * @property {Object} data.offsets.popper `top`, `left`, `width`, `height` values\n * @property {Object} data.offsets.reference `top`, `left`, `width`, `height` values\n * @property {Object} data.offsets.arrow] `top` and `left` offsets, only one of them will be different from 0\n */\n\n/**\n * Default options provided to Popper.js constructor.<br />\n * These can be overridden using the `options` argument of Popper.js.<br />\n * To override an option, simply pass an object with the same\n * structure of the `options` object, as the 3rd argument. For example:\n * ```\n * new Popper(ref, pop, {\n *   modifiers: {\n *     preventOverflow: { enabled: false }\n *   }\n * })\n * ```\n * @type {Object}\n * @static\n * @memberof Popper\n */\nvar Defaults = {\n  /**\n   * Popper's placement.\n   * @prop {Popper.placements} placement='bottom'\n   */\n  placement: 'bottom',\n\n  /**\n   * Set this to true if you want popper to position it self in 'fixed' mode\n   * @prop {Boolean} positionFixed=false\n   */\n  positionFixed: false,\n\n  /**\n   * Whether events (resize, scroll) are initially enabled.\n   * @prop {Boolean} eventsEnabled=true\n   */\n  eventsEnabled: true,\n\n  /**\n   * Set to true if you want to automatically remove the popper when\n   * you call the `destroy` method.\n   * @prop {Boolean} removeOnDestroy=false\n   */\n  removeOnDestroy: false,\n\n  /**\n   * Callback called when the popper is created.<br />\n   * By default, it is set to no-op.<br />\n   * Access Popper.js instance with `data.instance`.\n   * @prop {onCreate}\n   */\n  onCreate: function onCreate() {},\n\n  /**\n   * Callback called when the popper is updated. This callback is not called\n   * on the initialization/creation of the popper, but only on subsequent\n   * updates.<br />\n   * By default, it is set to no-op.<br />\n   * Access Popper.js instance with `data.instance`.\n   * @prop {onUpdate}\n   */\n  onUpdate: function onUpdate() {},\n\n  /**\n   * List of modifiers used to modify the offsets before they are applied to the popper.\n   * They provide most of the functionalities of Popper.js.\n   * @prop {modifiers}\n   */\n  modifiers: modifiers\n};\n\n/**\n * @callback onCreate\n * @param {dataObject} data\n */\n\n/**\n * @callback onUpdate\n * @param {dataObject} data\n */\n\n// Utils\n// Methods\nvar Popper = function () {\n  /**\n   * Creates a new Popper.js instance.\n   * @class Popper\n   * @param {Element|referenceObject} reference - The reference element used to position the popper\n   * @param {Element} popper - The HTML / XML element used as the popper\n   * @param {Object} options - Your custom options to override the ones defined in [Defaults](#defaults)\n   * @return {Object} instance - The generated Popper.js instance\n   */\n  function Popper(reference, popper) {\n    var _this = this;\n\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    classCallCheck(this, Popper);\n\n    this.scheduleUpdate = function () {\n      return requestAnimationFrame(_this.update);\n    };\n\n    // make update() debounced, so that it only runs at most once-per-tick\n    this.update = debounce(this.update.bind(this));\n\n    // with {} we create a new object with the options inside it\n    this.options = _extends({}, Popper.Defaults, options);\n\n    // init state\n    this.state = {\n      isDestroyed: false,\n      isCreated: false,\n      scrollParents: []\n    };\n\n    // get reference and popper elements (allow jQuery wrappers)\n    this.reference = reference && reference.jquery ? reference[0] : reference;\n    this.popper = popper && popper.jquery ? popper[0] : popper;\n\n    // Deep merge modifiers options\n    this.options.modifiers = {};\n    Object.keys(_extends({}, Popper.Defaults.modifiers, options.modifiers)).forEach(function (name) {\n      _this.options.modifiers[name] = _extends({}, Popper.Defaults.modifiers[name] || {}, options.modifiers ? options.modifiers[name] : {});\n    });\n\n    // Refactoring modifiers' list (Object => Array)\n    this.modifiers = Object.keys(this.options.modifiers).map(function (name) {\n      return _extends({\n        name: name\n      }, _this.options.modifiers[name]);\n    })\n    // sort the modifiers by order\n    .sort(function (a, b) {\n      return a.order - b.order;\n    });\n\n    // modifiers have the ability to execute arbitrary code when Popper.js get inited\n    // such code is executed in the same order of its modifier\n    // they could add new properties to their options configuration\n    // BE AWARE: don't add options to `options.modifiers.name` but to `modifierOptions`!\n    this.modifiers.forEach(function (modifierOptions) {\n      if (modifierOptions.enabled && isFunction(modifierOptions.onLoad)) {\n        modifierOptions.onLoad(_this.reference, _this.popper, _this.options, modifierOptions, _this.state);\n      }\n    });\n\n    // fire the first update to position the popper in the right place\n    this.update();\n\n    var eventsEnabled = this.options.eventsEnabled;\n    if (eventsEnabled) {\n      // setup event listeners, they will take care of update the position in specific situations\n      this.enableEventListeners();\n    }\n\n    this.state.eventsEnabled = eventsEnabled;\n  }\n\n  // We can't use class properties because they don't get listed in the\n  // class prototype and break stuff like Sinon stubs\n\n\n  createClass(Popper, [{\n    key: 'update',\n    value: function update$$1() {\n      return update.call(this);\n    }\n  }, {\n    key: 'destroy',\n    value: function destroy$$1() {\n      return destroy.call(this);\n    }\n  }, {\n    key: 'enableEventListeners',\n    value: function enableEventListeners$$1() {\n      return enableEventListeners.call(this);\n    }\n  }, {\n    key: 'disableEventListeners',\n    value: function disableEventListeners$$1() {\n      return disableEventListeners.call(this);\n    }\n\n    /**\n     * Schedules an update. It will run on the next UI update available.\n     * @method scheduleUpdate\n     * @memberof Popper\n     */\n\n\n    /**\n     * Collection of utilities useful when writing custom modifiers.\n     * Starting from version 1.7, this method is available only if you\n     * include `popper-utils.js` before `popper.js`.\n     *\n     * **DEPRECATION**: This way to access PopperUtils is deprecated\n     * and will be removed in v2! Use the PopperUtils module directly instead.\n     * Due to the high instability of the methods contained in Utils, we can't\n     * guarantee them to follow semver. Use them at your own risk!\n     * @static\n     * @private\n     * @type {Object}\n     * @deprecated since version 1.8\n     * @member Utils\n     * @memberof Popper\n     */\n\n  }]);\n  return Popper;\n}();\n\n/**\n * The `referenceObject` is an object that provides an interface compatible with Popper.js\n * and lets you use it as replacement of a real DOM node.<br />\n * You can use this method to position a popper relatively to a set of coordinates\n * in case you don't have a DOM node to use as reference.\n *\n * ```\n * new Popper(referenceObject, popperNode);\n * ```\n *\n * NB: This feature isn't supported in Internet Explorer 10.\n * @name referenceObject\n * @property {Function} data.getBoundingClientRect\n * A function that returns a set of coordinates compatible with the native `getBoundingClientRect` method.\n * @property {number} data.clientWidth\n * An ES6 getter that will return the width of the virtual reference element.\n * @property {number} data.clientHeight\n * An ES6 getter that will return the height of the virtual reference element.\n */\n\n\nPopper.Utils = (typeof window !== 'undefined' ? window : global).PopperUtils;\nPopper.placements = placements;\nPopper.Defaults = Defaults;\n\nexport default Popper;\n//# sourceMappingURL=popper.js.map\n"],"sourceRoot":""}